                          Exciton1D
                          ---------

What is it?
-----------

This program calculates the absorption spectrum and band dispersion
of a 1 Dimensional molecular aggregate by solving the Holstein
Hamiltonian. Three types of excitations are considered; Frenkel
excitons, charge-transfer excitons, and vibrational excitons.
The Hamiltonian is represented in a multiparticle basis. For
more information, see the following papers and references therin:

    Spano, F.C. Acc. Chem. Res. 2010
    Hestand, N.J.; Spano, F.C. Acc. Chem. Res. 2017

If you use the results from this program in a publication,
please cite the above papers. This program is distributed 
under the MIT liscense.


How do I use it?
----------------

The program can be compiled using make and the supplied makefile.
You may need to edit the makefile so that it is appropriate for
your system. 

Once compiled, the program can be run from the command line. An
input file containing simulation parameters can be provided as
the first argument. An example input file with parameter explinations
is provided in example.inp. For example, run the program with 

./exciton1D ./example.inp

After running the program, four csv files are produced, one contains
the simulation parameters and has the extension _para.csv while the
other three contain simulation data. The first has the
extension _ab.csv, the second has the extension _disp.csv and the
third has the extension _mom.csv. The first contains the absorption 
spectrum, the second the dispersion curve of the lowest energy exciton,
and the third, the moments of the absorption spectrum. A simple
python script called showspec.py is provided to view the program output. 
To use this script enter the command

python ./showspec.py ./task_title

Where task_title is the name given to the simulation. For example,
in the example.inp file task_title is set to example.


What libraries are required?
----------------------------

To build the exciton1D program:
LAPACK

If you want to use the showspec.py script:
numpy
matplotlib
